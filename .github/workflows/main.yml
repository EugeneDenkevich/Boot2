name: Run Test

on:
  push:
    branches:
      - main
      
jobs:

  test:
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v3

    - name: Set up Python 3.11.1
      uses: actions/setup-python@v4
      with:
        python-version: 3.11.1

    - name: Install dependencies
      run: make install

    - name: Test
      run: make test
        
  lint:
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v3

    - name: Set up Python 3.11.1
      uses: actions/setup-python@v4
      with:
        python-version: 3.11.1

    - name: Install dependencies
      run: |
        make install

    - name: Lint
      run: |
        make lint

  build:
    runs-on: ubuntu-latest
    needs: [test, lint]
    steps:

    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker
      uses: actions/setup-python@v4
      with:
        python-version: '3.11.5'

    - name: Build Docker Image
      run: cd app && docker build -t eugenestudio/boot2:latest .

    - name: Login to Docker Hub
      run: |
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }} && \
        echo "The logining has done successful"

    - name: Push Docker Image to Docker Hub
      run: docker push eugenestudio/boot2:latest


  prepare-env:
    runs-on: self-hosted
    needs: [test, lint]
    steps:

      - name: checkout repo
        uses: actions/checkout@v4

      - name: Create env
        run: cp ./app/.env-example ./app/.env

      - name: Set Permissions
        run: echo ${{ secrets.EUGENE_PASSWORD }} | sudo -S chown -R $USER:$USER /home/eugene/apps/Boot2

      - name: Stop and remove containers, networks
        run: echo ${{ secrets.EUGENE_PASSWORD }} | sudo -S docker compose -f docker-compose-prod.yml down

      - name: Remove unused data
        run: echo ${{ secrets.EUGENE_PASSWORD }} | sudo -S docker system prune -a -f

  deploy:
    runs-on: self-hosted
    needs: prepare-env
    steps:

      # - name: checkout repo
      #   uses: actions/checkout@v4

      - name: Create env
        run: cp ./app/.env-example ./app/.env

      - name: docker-compose
        run: echo ${{ secrets.EUGENE_PASSWORD }} | sudo -S docker compose -f docker-compose-prod.yml up -d